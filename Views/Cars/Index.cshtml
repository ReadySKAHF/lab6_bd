<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Управление автомобилями</title>
</head>
<body>
    <h1>Управление автомобилями</h1>

    <!-- Форма для добавления автомобиля -->
    <h2>Добавить новый автомобиль</h2>
    <form id="createCarForm">
        <label for="owner">Владелец:</label>
        <select id="owner" required></select>
        <br>
        <label for="brand">Марка:</label>
        <input type="text" id="brand" required>
        <br>
        <label for="power">Мощность (л.с.):</label>
        <input type="number" id="power" required>
        <br>
        <label for="color">Цвет:</label>
        <input type="text" id="color" required>
        <br>
        <label for="licensePlate">Регистрационный номер:</label>
        <input type="text" id="licensePlate" required>
        <br>
        <label for="yearOfProduction">Год выпуска:</label>
        <input type="number" id="yearOfProduction" required>
        <br>
        <button type="submit">Добавить автомобиль</button>
    </form>

    <!-- Таблица для отображения автомобилей -->
    <h2>Список автомобилей</h2>
    <table id="carsTable" border="1">
        <thead>
            <tr>
                <th>ID</th>
                <th>Владелец</th>
                <th>Марка</th>
                <th>Мощность</th>
                <th>Цвет</th>
                <th>Регистрационный номер</th>
                <th>Год выпуска</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <script>
                // Универсальная функция для загрузки данных с логированием
        async function fetchData(url) {
            try {
                console.log(`Запрос к API: ${url}`);
                const response = await fetch(url);
                if (!response.ok) throw new Error(`Ошибка: ${response.status} ${response.statusText}`);
                const data = await response.json();
                console.log(`Ответ от ${url}:`, data);
                return data;
            } catch (error) {
                console.error(`Ошибка при загрузке с ${url}:`, error);
                alert(`Ошибка загрузки данных с сервера: ${url}`);
                return [];
            }
        }

        async function updateCar(carId) {
            const updatedCar = {
                carId: carId,
                ownerId: document.getElementById('owner').value,
                brand: document.getElementById('brand').value,
                power: parseInt(document.getElementById('power').value),
                color: document.getElementById('color').value,
                licensePlate: document.getElementById('licensePlate').value,
                yearOfProduction: parseInt(document.getElementById('yearOfProduction').value)
            };

            console.log("Обновление автомобиля:", updatedCar);

            const response = await fetch(`/api/CarsAPI/${carId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(updatedCar)
            });

            if (response.ok) {
                alert('Автомобиль обновлен!');
                loadCars();
                document.getElementById('createCarForm').reset();

                // Сброс формы обратно на "Добавить"
                const form = document.getElementById('createCarForm');
                form.querySelector('button[type="submit"]').textContent = 'Добавить автомобиль';
                form.onsubmit = createCar;
            } else {
                alert('Ошибка при обновлении автомобиля.');
            }
        }


        // Заполнение выпадающих списков
        async function populateSelects() {
            console.log("Заполнение выпадающих списков...");
            const [owners, mechanics] = await Promise.all([
                fetchData('/api/OwnersAPI'),    // Владелец
                fetchData('/api/MechanicsAPI')  // Механик
            ]);

            console.log("Владельцы:", owners);
            console.log("Механики:", mechanics);

            fillSelect('owner', owners, 'ownerId', 'fullName');
            fillSelect('mechanic', mechanics, 'mechanicId', 'fullName');
        }

        // Функция для заполнения select элемента
        function fillSelect(selectId, data, valueField, textField) {
            const select = document.getElementById(selectId);
            select.innerHTML = '<option value="">Выберите</option>';

            // Проверка на наличие $values и извлечение
            const items = data.$values || data;

            items.forEach(item => {
                const option = document.createElement('option');
                option.value = item[valueField];
                option.textContent = item[textField];
                select.appendChild(option);
            });
        }


        // Загрузка автомобилей и заполнение таблицы
        async function loadCars() {
            console.log("Загрузка автомобилей...");

            // Получаем данные с API
            const response = await fetch('/api/CarsAPI');
            const result = await response.json();

            // Извлекаем массив из $values
            const cars = result.$values || [];
            console.log("Полученные автомобили:", cars);

            const tableBody = document.querySelector('#carsTable tbody');
            tableBody.innerHTML = ''; // Очищаем таблицу

            cars.forEach(car => {
                console.log("Обработка автомобиля:", car);
                const row = document.createElement('tr');

                row.innerHTML = `
                    <td>${car.carId}</td>
                    <td>${car.owner ? car.owner.fullName : '—'}</td>
                    <td>${car.brand || '—'}</td>
                    <td>${car.power || '—'}</td>
                    <td>${car.color || '—'}</td>
                    <td>${car.licensePlate || '—'}</td>
                    <td>${car.yearOfProduction || '—'}</td>
                    <td>
                        <button onclick="deleteCar(${car.carId})">Удалить</button>
                    </td>
                `;

                tableBody.appendChild(row);
            });

            console.log("Таблица автомобилей заполнена.");
        }


        // Добавление автомобиля
        async function loadCars() {
            console.log("Загрузка автомобилей...");

            // Получаем данные с API
            const response = await fetch('/api/CarsAPI');
            const result = await response.json();

            // Извлекаем массив из $values
            const cars = result.$values || result;
            console.log("Полученные автомобили:", cars);

            const tableBody = document.querySelector('#carsTable tbody');
            tableBody.innerHTML = ''; // Очищаем таблицу

            cars.forEach(car => {
                console.log("Обработка автомобиля:", car);
                const row = document.createElement('tr');

                row.innerHTML = `
                    <td>${car.carId || '—'}</td>
                    <td>${car.owner ? car.owner.fullName : '—'}</td>
                    <td>${car.brand || '—'}</td>
                    <td>${car.power || '—'}</td>
                    <td>${car.color || '—'}</td>
                    <td>${car.licensePlate || '—'}</td>
                    <td>${car.yearOfProduction || '—'}</td>
                    <td>
                        <button onclick="editCar(${car.carId})">Редактировать</button>
                        <button onclick="deleteCar(${car.carId})">Удалить</button>
                    </td>
                `;

                tableBody.appendChild(row);
            });

            console.log("Таблица автомобилей заполнена.");
        }

        function editCar(carId) {
            fetch(`/api/CarsAPI/${carId}`)
                .then(response => response.json())
                .then(car => {
                    console.log("Редактирование автомобиля:", car);

                    document.getElementById('owner').value = car.ownerId || '';
                    document.getElementById('brand').value = car.brand || '';
                    document.getElementById('power').value = car.power || '';
                    document.getElementById('color').value = car.color || '';
                    document.getElementById('licensePlate').value = car.licensePlate || '';
                    document.getElementById('yearOfProduction').value = car.yearOfProduction || '';

                    // Заменяем кнопку "Добавить" на "Обновить"
                    const form = document.getElementById('createCarForm');
                    form.querySelector('button[type="submit"]').textContent = 'Обновить';
                    form.onsubmit = function (e) {
                        e.preventDefault();
                        updateCar(carId);
                    };
                });
        }


        // Удаление автомобиля
        async function deleteCar(carId) {
            console.log(`Удаление автомобиля с ID: ${carId}`);
            const response = await fetch(`/api/CarsAPI/${carId}`, { method: 'DELETE' });
            if (response.ok) {
                alert('Автомобиль удален.');
                loadCars();
            } else {
                alert('Ошибка при удалении автомобиля.');
            }
        }

        // Инициализация страницы
        document.addEventListener('DOMContentLoaded', () => {
            console.log("Инициализация страницы...");
            populateSelects();
            loadCars();
            document.getElementById('createCarForm').addEventListener('submit', createCar);
        });

    </script>
</body>
</html>
